{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "POST /api/topics": {
    "description": "posts a new topic and returns the newly posted topic",
    "body_accepts": ["slug", "description"],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["created_at","author", "topic","asc","desc","limit","p"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "POST /api/articles":{
    "description":"serves with the newly posted article",
    "queries":[],
    "requestBody":{
      "author": "lurker",
      "title": "What Life",
      "body": "Getting code logics doing random things",
      "topic": "paper"
    },
    "exampleResponse":{
      "article":{
        "article_id": 14,
        "title": "What Life",
        "topic": "paper",
        "author": "lurker",
        "body": "Getting code logics doing random things",
        "created_at": "2024-05-31T10:40:27.544Z",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/97050/pexels-photo-97050.jpeg?w=700&h=700",
        "comment_count": 0
      }
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article object for a valid existent article id",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "butter_bridge",
        "body": "I find this existence challenging",
        "created_at": "2020-07-09T20:11:00.000Z",
        "votes": 100,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
      }
    }
  },
  "PATCH /api/articles/:article_id":{
    "description": "serves with an object of updated article",
    "queries": [],
    "requestBody": {
      "inc_votes": 1
    },
    "exampleResponse":{
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "butter_bridge",
        "body": "I find this existence challenging",
        "created_at": "2020-07-09T20:11:00.000Z",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
      }
    }
  },
  "DELETE /api/articles/:article_id":{
    "description": "serves with empty object after deleting the article if valid existing id is given",
    "queries":[],
    "exampleResponse":{}
  },
  "GET /api/articles/:article_id/comments":{
    "description": "serves with an array of comments for the article id provided",
    "queries": ["limit","p"],
    "exampleResponse":{
      "comments":[
        {
          "comment_id": 10,
          "body": "git push origin master",
          "votes": 0,
          "author": "icellusedkars",
          "article_id": 3,
          "created_at": 1592641440000
        },
        {
          "comment_id": 11,
          "body": "Ambidextrous marsupial",
          "votes": 0,
          "author": "icellusedkars",
          "article_id": 3,
          "created_at": 1600560600000
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments":{
    "description": "serves with an object of new posted comment",
    "queries": [],
    "requestBody": {
      "username":"lurker",
      "body":"I cant code when i am sleepy"
    },
    "exampleResponse":{
      "comment": {
        "comment_id": 19,
        "body": "I cant code when i am sleepy.",
        "article_id": 2,
        "author": "lurker",
        "votes": 0,
        "created_at": "2024-05-29T17:53:20.409Z"
      }
    }
  },
  "DELETE /api/comments/:comment_id":{
    "description": "serves with an empty response after deleting the comment",
    "queries": [],
    "exampleResponse":{}
  },
  "PATCH /api/comments/:comment_id":{
    "description":"serves with an object of a comment whose votes are updated",
    "queries":[],
    "requestBody":{"inc_votes":1},
    "exampleResponse":{
      "comment":{
        "comment_id":5,
        "body":"I hate streaming noses",
        "article_id":1,
        "author":"icellusedkars",
        "votes":1,
        "created_at":"2020-11-03T21:00:00.000Z"
      }
    }
  },
  "GET /api/users":{
    "description": "serves an array of objects of all users",
    "queries": [],
    "exampleResponse": {
      "users": [{
        "username": "butter_bridge",
        "name": "jonny",
        "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg"
      }]
    }
  },
  "GET /api/users/:username":{
    "description":"serves with an object of a user with the username given",
    "queries":[],
    "exampleResponse":{
      "username":{
        "username": "lurker",
        "name": "do_nothing",
        "avatar_url": "https://www.golenbock.com/wp-content/uploads/2015/01/placeholder-user.png"
      }
    }
  },
  "POST /api/users/:username":{
    "description": "serves with an object of new added user",
    "queries": [],
    "requestBody": {
      "username":"lurker",
      "name":"name",
      "avatar_url":"https://url.com"
    },
    "exampleResponse":{
      "user": {
        "username":"lurker",
        "name":"name",
        "avatar_url":"https://url.com"
      }
    }
  },
  "PATCH /api/users/:username":{
    "description": "serves with an object of updated user",
    "queries": [],
    "requestBody": {
      "username":"lurker",
      "name":"name",
      "avatar_url":"https://url.com"
    },
    "exampleResponse":{
      "user": {
        "username":"lurker",
        "name":"name",
        "avatar_url":"https://url.com"
      }
    }
  },
  "DELETE /api/users/:username":{
    "description": "serves with an empty response after deleting the user, user's comments and articles",
    "queries": [],
    "exampleResponse":{}
  }
}